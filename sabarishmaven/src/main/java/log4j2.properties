name=PropertiesConfig
property.filename = logs
appenders = console,file

appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = [%-5level]%d{yyyy-MM-ddHH:mm:ss.SSS}[%t]%c{1}-%msg%n

appender.file.type = File
appender.file.name = LOGFILE
appender.file.fileName=${filename}/dhivya.log
appender.file.layout.type=PatternLayout
appender.file.layout.pattern=[%-5level]%d{yyyy-MM-ddHH:mm:ss.SSS}[%t]%c{1}-%msg%n

loggers=file
logger.file.name=rg
logger.file.level = debug
logger.file.appenderRefs = file
logger.file.appenderRef.file.ref = LOGFILE

rootLogger.level = info
rootLogger.appenderRefs = stdout
rootLogger.appenderRef.stdout.ref = STDOUT
step3: basic configuration

static Logger log= LogManager.getLogger(CR.class);
	publicstaticvoidmain(String[] args) {
		System.out.println("welcome");
		log.info("This is information");
		log.error("This is error message");
		log.debug("This is debug message");
		log.warn("this is warning message");
		log.fatal("this is fatal message ");
		System.out.println("fbye bye");
		
		// error and fatal message alone will be executed 
		// if u want to edit it and store it in a file , use properties file 
		// in src/main/resources=> add properties file and run in
